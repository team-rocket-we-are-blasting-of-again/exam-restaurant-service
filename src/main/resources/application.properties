server.port=${RESTAURANT_SERVICE_PORT:9080}


# DB
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
#create-drop
spring.jpa.hibernate.show-sql=true
spring.datasource.url=${RESTAURANT_SERVICE_DB:jdbc:postgresql://localhost:6969/restaurants}
spring.datasource.username=${RESTAURANT_DB_USER:postgres}
spring.datasource.password=${RESTAURANT_DB_PASSWORD:Qwerty!234}


spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.generate-ddl=false
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.open-in-view=false

# CAMUNDA
camunda.bpm.client.base-url=${CASE_MANAGEMENT_CAMUNDA_BASE_URL:http://localhost:8080/engine-rest}
camunda.bpm.client.disable-backoff-strategy=true

# KAFKA
spring.kafka.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVER:localhost:9092}

spring.main.allow-bean-definition-overriding=true

# gRPC
grpc.client.grpc-service.host=${AUTH_GRPC_HOST:localhost}
grpc.client.grpc-service.port=${AUTH_GRPC_PORT:9000}
grpc.client.grpc-service.address=${AUTH_GRPC_URL:static://localhost:9000}
grpc.client.grpc-service.negotiation-type=plaintext